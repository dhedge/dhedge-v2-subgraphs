// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DAOAddressSet extends ethereum.Event {
  get params(): DAOAddressSet__Params {
    return new DAOAddressSet__Params(this);
  }
}

export class DAOAddressSet__Params {
  _event: DAOAddressSet;

  constructor(event: DAOAddressSet) {
    this._event = event;
  }

  get daoAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DaoFeeSet extends ethereum.Event {
  get params(): DaoFeeSet__Params {
    return new DaoFeeSet__Params(this);
  }
}

export class DaoFeeSet__Params {
  _event: DaoFeeSet;

  constructor(event: DaoFeeSet) {
    this._event = event;
  }

  get numerator(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get denominator(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ExitCooldownSet extends ethereum.Event {
  get params(): ExitCooldownSet__Params {
    return new ExitCooldownSet__Params(this);
  }
}

export class ExitCooldownSet__Params {
  _event: ExitCooldownSet;

  constructor(event: ExitCooldownSet) {
    this._event = event;
  }

  get cooldown(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ExitFeeSet extends ethereum.Event {
  get params(): ExitFeeSet__Params {
    return new ExitFeeSet__Params(this);
  }
}

export class ExitFeeSet__Params {
  _event: ExitFeeSet;

  constructor(event: ExitFeeSet) {
    this._event = event;
  }

  get numerator(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get denominator(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FundCreated extends ethereum.Event {
  get params(): FundCreated__Params {
    return new FundCreated__Params(this);
  }
}

export class FundCreated__Params {
  _event: FundCreated;

  constructor(event: FundCreated) {
    this._event = event;
  }

  get fundAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isPoolPrivate(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get fundName(): string {
    return this._event.parameters[2].value.toString();
  }

  get managerName(): string {
    return this._event.parameters[3].value.toString();
  }

  get manager(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get time(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get performanceFeeNumerator(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get managerFeeNumerator(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get managerFeeDenominator(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class GovernanceAddressSet extends ethereum.Event {
  get params(): GovernanceAddressSet__Params {
    return new GovernanceAddressSet__Params(this);
  }
}

export class GovernanceAddressSet__Params {
  _event: GovernanceAddressSet;

  constructor(event: GovernanceAddressSet) {
    this._event = event;
  }

  get governanceAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LogUpgrade extends ethereum.Event {
  get params(): LogUpgrade__Params {
    return new LogUpgrade__Params(this);
  }
}

export class LogUpgrade__Params {
  _event: LogUpgrade;

  constructor(event: LogUpgrade) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MaximumSupportedAssetCountSet extends ethereum.Event {
  get params(): MaximumSupportedAssetCountSet__Params {
    return new MaximumSupportedAssetCountSet__Params(this);
  }
}

export class MaximumSupportedAssetCountSet__Params {
  _event: MaximumSupportedAssetCountSet;

  constructor(event: MaximumSupportedAssetCountSet) {
    this._event = event;
  }

  get count(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PoolPerformanceAddressSet extends ethereum.Event {
  get params(): PoolPerformanceAddressSet__Params {
    return new PoolPerformanceAddressSet__Params(this);
  }
}

export class PoolPerformanceAddressSet__Params {
  _event: PoolPerformanceAddressSet;

  constructor(event: PoolPerformanceAddressSet) {
    this._event = event;
  }

  get poolPerformanceAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProxyCreated extends ethereum.Event {
  get params(): ProxyCreated__Params {
    return new ProxyCreated__Params(this);
  }
}

export class ProxyCreated__Params {
  _event: ProxyCreated;

  constructor(event: ProxyCreated) {
    this._event = event;
  }

  get proxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetAssetHandler extends ethereum.Event {
  get params(): SetAssetHandler__Params {
    return new SetAssetHandler__Params(this);
  }
}

export class SetAssetHandler__Params {
  _event: SetAssetHandler;

  constructor(event: SetAssetHandler) {
    this._event = event;
  }

  get assetHandler(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetMaximumFee extends ethereum.Event {
  get params(): SetMaximumFee__Params {
    return new SetMaximumFee__Params(this);
  }
}

export class SetMaximumFee__Params {
  _event: SetMaximumFee;

  constructor(event: SetMaximumFee) {
    this._event = event;
  }

  get performanceFeeNumerator(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get managerFeeNumerator(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get denominator(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetMaximumPerformanceFeeNumeratorChange extends ethereum.Event {
  get params(): SetMaximumPerformanceFeeNumeratorChange__Params {
    return new SetMaximumPerformanceFeeNumeratorChange__Params(this);
  }
}

export class SetMaximumPerformanceFeeNumeratorChange__Params {
  _event: SetMaximumPerformanceFeeNumeratorChange;

  constructor(event: SetMaximumPerformanceFeeNumeratorChange) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetPerformanceFeeNumeratorChangeDelay extends ethereum.Event {
  get params(): SetPerformanceFeeNumeratorChangeDelay__Params {
    return new SetPerformanceFeeNumeratorChangeDelay__Params(this);
  }
}

export class SetPerformanceFeeNumeratorChangeDelay__Params {
  _event: SetPerformanceFeeNumeratorChangeDelay;

  constructor(event: SetPerformanceFeeNumeratorChangeDelay) {
    this._event = event;
  }

  get delay(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetPoolManagerFee extends ethereum.Event {
  get params(): SetPoolManagerFee__Params {
    return new SetPoolManagerFee__Params(this);
  }
}

export class SetPoolManagerFee__Params {
  _event: SetPoolManagerFee;

  constructor(event: SetPoolManagerFee) {
    this._event = event;
  }

  get numerator(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get denominator(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetPoolStorageVersion extends ethereum.Event {
  get params(): SetPoolStorageVersion__Params {
    return new SetPoolStorageVersion__Params(this);
  }
}

export class SetPoolStorageVersion__Params {
  _event: SetPoolStorageVersion;

  constructor(event: SetPoolStorageVersion) {
    this._event = event;
  }

  get poolStorageVersion(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PoolFactoryMoonlight__createFundInput_supportedAssetsStruct extends ethereum.Tuple {
  get asset(): Address {
    return this[0].toAddress();
  }

  get isDeposit(): boolean {
    return this[1].toBoolean();
  }
}

export class PoolFactoryMoonlight__getDaoFeeResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class PoolFactoryMoonlight__getExitFeeResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class PoolFactoryMoonlight__getMaximumFeeResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }
}

export class PoolFactoryMoonlight extends ethereum.SmartContract {
  static bind(address: Address): PoolFactoryMoonlight {
    return new PoolFactoryMoonlight("PoolFactoryMoonlight", address);
  }

  createFund(
    _privatePool: boolean,
    _manager: Address,
    _managerName: string,
    _fundName: string,
    _fundSymbol: string,
    _performanceFeeNumerator: BigInt,
    _managerFeeNumerator: BigInt,
    _supportedAssets: Array<
      PoolFactoryMoonlight__createFundInput_supportedAssetsStruct
    >
  ): Address {
    let result = super.call(
      "createFund",
      "createFund(bool,address,string,string,string,uint256,uint256,(address,bool)[]):(address)",
      [
        ethereum.Value.fromBoolean(_privatePool),
        ethereum.Value.fromAddress(_manager),
        ethereum.Value.fromString(_managerName),
        ethereum.Value.fromString(_fundName),
        ethereum.Value.fromString(_fundSymbol),
        ethereum.Value.fromUnsignedBigInt(_performanceFeeNumerator),
        ethereum.Value.fromUnsignedBigInt(_managerFeeNumerator),
        ethereum.Value.fromTupleArray(_supportedAssets)
      ]
    );

    return result[0].toAddress();
  }

  try_createFund(
    _privatePool: boolean,
    _manager: Address,
    _managerName: string,
    _fundName: string,
    _fundSymbol: string,
    _performanceFeeNumerator: BigInt,
    _managerFeeNumerator: BigInt,
    _supportedAssets: Array<
      PoolFactoryMoonlight__createFundInput_supportedAssetsStruct
    >
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createFund",
      "createFund(bool,address,string,string,string,uint256,uint256,(address,bool)[]):(address)",
      [
        ethereum.Value.fromBoolean(_privatePool),
        ethereum.Value.fromAddress(_manager),
        ethereum.Value.fromString(_managerName),
        ethereum.Value.fromString(_fundName),
        ethereum.Value.fromString(_fundSymbol),
        ethereum.Value.fromUnsignedBigInt(_performanceFeeNumerator),
        ethereum.Value.fromUnsignedBigInt(_managerFeeNumerator),
        ethereum.Value.fromTupleArray(_supportedAssets)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  daoAddress(): Address {
    let result = super.call("daoAddress", "daoAddress():(address)", []);

    return result[0].toAddress();
  }

  try_daoAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("daoAddress", "daoAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deploy(_data: Bytes, _proxyType: i32): Address {
    let result = super.call("deploy", "deploy(bytes,uint8):(address)", [
      ethereum.Value.fromBytes(_data),
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_proxyType))
    ]);

    return result[0].toAddress();
  }

  try_deploy(_data: Bytes, _proxyType: i32): ethereum.CallResult<Address> {
    let result = super.tryCall("deploy", "deploy(bytes,uint8):(address)", [
      ethereum.Value.fromBytes(_data),
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_proxyType))
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deployedFunds(param0: BigInt): Address {
    let result = super.call(
      "deployedFunds",
      "deployedFunds(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_deployedFunds(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployedFunds",
      "deployedFunds(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAddress(name: Bytes): Address {
    let result = super.call("getAddress", "getAddress(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(name)
    ]);

    return result[0].toAddress();
  }

  try_getAddress(name: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("getAddress", "getAddress(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(name)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAssetGuard(extAsset: Address): Address {
    let result = super.call(
      "getAssetGuard",
      "getAssetGuard(address):(address)",
      [ethereum.Value.fromAddress(extAsset)]
    );

    return result[0].toAddress();
  }

  try_getAssetGuard(extAsset: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAssetGuard",
      "getAssetGuard(address):(address)",
      [ethereum.Value.fromAddress(extAsset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAssetHandler(): Address {
    let result = super.call(
      "getAssetHandler",
      "getAssetHandler():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getAssetHandler(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAssetHandler",
      "getAssetHandler():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAssetPrice(asset: Address): BigInt {
    let result = super.call(
      "getAssetPrice",
      "getAssetPrice(address):(uint256)",
      [ethereum.Value.fromAddress(asset)]
    );

    return result[0].toBigInt();
  }

  try_getAssetPrice(asset: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAssetPrice",
      "getAssetPrice(address):(uint256)",
      [ethereum.Value.fromAddress(asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAssetType(asset: Address): i32 {
    let result = super.call("getAssetType", "getAssetType(address):(uint16)", [
      ethereum.Value.fromAddress(asset)
    ]);

    return result[0].toI32();
  }

  try_getAssetType(asset: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getAssetType",
      "getAssetType(address):(uint16)",
      [ethereum.Value.fromAddress(asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getContractGuard(extContract: Address): Address {
    let result = super.call(
      "getContractGuard",
      "getContractGuard(address):(address)",
      [ethereum.Value.fromAddress(extContract)]
    );

    return result[0].toAddress();
  }

  try_getContractGuard(extContract: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getContractGuard",
      "getContractGuard(address):(address)",
      [ethereum.Value.fromAddress(extContract)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDaoFee(): PoolFactoryMoonlight__getDaoFeeResult {
    let result = super.call("getDaoFee", "getDaoFee():(uint256,uint256)", []);

    return new PoolFactoryMoonlight__getDaoFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getDaoFee(): ethereum.CallResult<PoolFactoryMoonlight__getDaoFeeResult> {
    let result = super.tryCall(
      "getDaoFee",
      "getDaoFee():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PoolFactoryMoonlight__getDaoFeeResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getDeployedFunds(): Array<Address> {
    let result = super.call(
      "getDeployedFunds",
      "getDeployedFunds():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getDeployedFunds(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getDeployedFunds",
      "getDeployedFunds():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getExitCooldown(): BigInt {
    let result = super.call(
      "getExitCooldown",
      "getExitCooldown():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getExitCooldown(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getExitCooldown",
      "getExitCooldown():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getExitFee(): PoolFactoryMoonlight__getExitFeeResult {
    let result = super.call("getExitFee", "getExitFee():(uint256,uint256)", []);

    return new PoolFactoryMoonlight__getExitFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getExitFee(): ethereum.CallResult<
    PoolFactoryMoonlight__getExitFeeResult
  > {
    let result = super.tryCall(
      "getExitFee",
      "getExitFee():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PoolFactoryMoonlight__getExitFeeResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getInvestedPools(user: Address): Array<Address> {
    let result = super.call(
      "getInvestedPools",
      "getInvestedPools(address):(address[])",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toAddressArray();
  }

  try_getInvestedPools(user: Address): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getInvestedPools",
      "getInvestedPools(address):(address[])",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getLogic(_proxyType: i32): Address {
    let result = super.call("getLogic", "getLogic(uint8):(address)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_proxyType))
    ]);

    return result[0].toAddress();
  }

  try_getLogic(_proxyType: i32): ethereum.CallResult<Address> {
    let result = super.tryCall("getLogic", "getLogic(uint8):(address)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_proxyType))
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getManagedPools(manager: Address): Array<Address> {
    let result = super.call(
      "getManagedPools",
      "getManagedPools(address):(address[])",
      [ethereum.Value.fromAddress(manager)]
    );

    return result[0].toAddressArray();
  }

  try_getManagedPools(manager: Address): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getManagedPools",
      "getManagedPools(address):(address[])",
      [ethereum.Value.fromAddress(manager)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getMaximumFee(): PoolFactoryMoonlight__getMaximumFeeResult {
    let result = super.call(
      "getMaximumFee",
      "getMaximumFee():(uint256,uint256,uint256)",
      []
    );

    return new PoolFactoryMoonlight__getMaximumFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getMaximumFee(): ethereum.CallResult<
    PoolFactoryMoonlight__getMaximumFeeResult
  > {
    let result = super.tryCall(
      "getMaximumFee",
      "getMaximumFee():(uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PoolFactoryMoonlight__getMaximumFeeResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getMaximumSupportedAssetCount(): BigInt {
    let result = super.call(
      "getMaximumSupportedAssetCount",
      "getMaximumSupportedAssetCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getMaximumSupportedAssetCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMaximumSupportedAssetCount",
      "getMaximumSupportedAssetCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  governanceAddress(): Address {
    let result = super.call(
      "governanceAddress",
      "governanceAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_governanceAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "governanceAddress",
      "governanceAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isPaused(): boolean {
    let result = super.call("isPaused", "isPaused():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPaused", "isPaused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPool(param0: Address): boolean {
    let result = super.call("isPool", "isPool(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isPool(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPool", "isPool(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidAsset(asset: Address): boolean {
    let result = super.call("isValidAsset", "isValidAsset(address):(bool)", [
      ethereum.Value.fromAddress(asset)
    ]);

    return result[0].toBoolean();
  }

  try_isValidAsset(asset: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isValidAsset", "isValidAsset(address):(bool)", [
      ethereum.Value.fromAddress(asset)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maximumPerformanceFeeNumeratorChange(): BigInt {
    let result = super.call(
      "maximumPerformanceFeeNumeratorChange",
      "maximumPerformanceFeeNumeratorChange():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maximumPerformanceFeeNumeratorChange(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maximumPerformanceFeeNumeratorChange",
      "maximumPerformanceFeeNumeratorChange():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  performanceFeeNumeratorChangeDelay(): BigInt {
    let result = super.call(
      "performanceFeeNumeratorChangeDelay",
      "performanceFeeNumeratorChangeDelay():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_performanceFeeNumeratorChangeDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "performanceFeeNumeratorChangeDelay",
      "performanceFeeNumeratorChangeDelay():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  poolPerformanceAddress(): Address {
    let result = super.call(
      "poolPerformanceAddress",
      "poolPerformanceAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_poolPerformanceAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "poolPerformanceAddress",
      "poolPerformanceAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolStorageVersion(): BigInt {
    let result = super.call(
      "poolStorageVersion",
      "poolStorageVersion():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_poolStorageVersion(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolStorageVersion",
      "poolStorageVersion():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  poolVersion(param0: Address): BigInt {
    let result = super.call("poolVersion", "poolVersion(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_poolVersion(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolVersion",
      "poolVersion(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transferWhitelist(param0: Address): boolean {
    let result = super.call(
      "transferWhitelist",
      "transferWhitelist(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_transferWhitelist(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferWhitelist",
      "transferWhitelist(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddTransferWhitelistCall extends ethereum.Call {
  get inputs(): AddTransferWhitelistCall__Inputs {
    return new AddTransferWhitelistCall__Inputs(this);
  }

  get outputs(): AddTransferWhitelistCall__Outputs {
    return new AddTransferWhitelistCall__Outputs(this);
  }
}

export class AddTransferWhitelistCall__Inputs {
  _call: AddTransferWhitelistCall;

  constructor(call: AddTransferWhitelistCall) {
    this._call = call;
  }

  get _extAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddTransferWhitelistCall__Outputs {
  _call: AddTransferWhitelistCall;

  constructor(call: AddTransferWhitelistCall) {
    this._call = call;
  }
}

export class CreateFundCall extends ethereum.Call {
  get inputs(): CreateFundCall__Inputs {
    return new CreateFundCall__Inputs(this);
  }

  get outputs(): CreateFundCall__Outputs {
    return new CreateFundCall__Outputs(this);
  }
}

export class CreateFundCall__Inputs {
  _call: CreateFundCall;

  constructor(call: CreateFundCall) {
    this._call = call;
  }

  get _privatePool(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }

  get _manager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _managerName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _fundName(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _fundSymbol(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _performanceFeeNumerator(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _managerFeeNumerator(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _supportedAssets(): Array<CreateFundCall_supportedAssetsStruct> {
    return this._call.inputValues[7].value.toTupleArray<
      CreateFundCall_supportedAssetsStruct
    >();
  }
}

export class CreateFundCall__Outputs {
  _call: CreateFundCall;

  constructor(call: CreateFundCall) {
    this._call = call;
  }

  get fund(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateFundCall_supportedAssetsStruct extends ethereum.Tuple {
  get asset(): Address {
    return this[0].toAddress();
  }

  get isDeposit(): boolean {
    return this[1].toBoolean();
  }
}

export class DeployCall extends ethereum.Call {
  get inputs(): DeployCall__Inputs {
    return new DeployCall__Inputs(this);
  }

  get outputs(): DeployCall__Outputs {
    return new DeployCall__Outputs(this);
  }
}

export class DeployCall__Inputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get _data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _proxyType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class DeployCall__Outputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class ImplInitializerCall extends ethereum.Call {
  get inputs(): ImplInitializerCall__Inputs {
    return new ImplInitializerCall__Inputs(this);
  }

  get outputs(): ImplInitializerCall__Outputs {
    return new ImplInitializerCall__Outputs(this);
  }
}

export class ImplInitializerCall__Inputs {
  _call: ImplInitializerCall;

  constructor(call: ImplInitializerCall) {
    this._call = call;
  }
}

export class ImplInitializerCall__Outputs {
  _call: ImplInitializerCall;

  constructor(call: ImplInitializerCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _poolLogic(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _managerLogic(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get assetHandler(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _daoAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _governanceAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveTransferWhitelistCall extends ethereum.Call {
  get inputs(): RemoveTransferWhitelistCall__Inputs {
    return new RemoveTransferWhitelistCall__Inputs(this);
  }

  get outputs(): RemoveTransferWhitelistCall__Outputs {
    return new RemoveTransferWhitelistCall__Outputs(this);
  }
}

export class RemoveTransferWhitelistCall__Inputs {
  _call: RemoveTransferWhitelistCall;

  constructor(call: RemoveTransferWhitelistCall) {
    this._call = call;
  }

  get _extAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveTransferWhitelistCall__Outputs {
  _call: RemoveTransferWhitelistCall;

  constructor(call: RemoveTransferWhitelistCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAssetHandlerCall extends ethereum.Call {
  get inputs(): SetAssetHandlerCall__Inputs {
    return new SetAssetHandlerCall__Inputs(this);
  }

  get outputs(): SetAssetHandlerCall__Outputs {
    return new SetAssetHandlerCall__Outputs(this);
  }
}

export class SetAssetHandlerCall__Inputs {
  _call: SetAssetHandlerCall;

  constructor(call: SetAssetHandlerCall) {
    this._call = call;
  }

  get assetHandler(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAssetHandlerCall__Outputs {
  _call: SetAssetHandlerCall;

  constructor(call: SetAssetHandlerCall) {
    this._call = call;
  }
}

export class SetDAOAddressCall extends ethereum.Call {
  get inputs(): SetDAOAddressCall__Inputs {
    return new SetDAOAddressCall__Inputs(this);
  }

  get outputs(): SetDAOAddressCall__Outputs {
    return new SetDAOAddressCall__Outputs(this);
  }
}

export class SetDAOAddressCall__Inputs {
  _call: SetDAOAddressCall;

  constructor(call: SetDAOAddressCall) {
    this._call = call;
  }

  get _daoAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDAOAddressCall__Outputs {
  _call: SetDAOAddressCall;

  constructor(call: SetDAOAddressCall) {
    this._call = call;
  }
}

export class SetDaoFeeCall extends ethereum.Call {
  get inputs(): SetDaoFeeCall__Inputs {
    return new SetDaoFeeCall__Inputs(this);
  }

  get outputs(): SetDaoFeeCall__Outputs {
    return new SetDaoFeeCall__Outputs(this);
  }
}

export class SetDaoFeeCall__Inputs {
  _call: SetDaoFeeCall;

  constructor(call: SetDaoFeeCall) {
    this._call = call;
  }

  get numerator(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get denominator(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetDaoFeeCall__Outputs {
  _call: SetDaoFeeCall;

  constructor(call: SetDaoFeeCall) {
    this._call = call;
  }
}

export class SetExitCooldownCall extends ethereum.Call {
  get inputs(): SetExitCooldownCall__Inputs {
    return new SetExitCooldownCall__Inputs(this);
  }

  get outputs(): SetExitCooldownCall__Outputs {
    return new SetExitCooldownCall__Outputs(this);
  }
}

export class SetExitCooldownCall__Inputs {
  _call: SetExitCooldownCall;

  constructor(call: SetExitCooldownCall) {
    this._call = call;
  }

  get cooldown(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetExitCooldownCall__Outputs {
  _call: SetExitCooldownCall;

  constructor(call: SetExitCooldownCall) {
    this._call = call;
  }
}

export class SetExitFeeCall extends ethereum.Call {
  get inputs(): SetExitFeeCall__Inputs {
    return new SetExitFeeCall__Inputs(this);
  }

  get outputs(): SetExitFeeCall__Outputs {
    return new SetExitFeeCall__Outputs(this);
  }
}

export class SetExitFeeCall__Inputs {
  _call: SetExitFeeCall;

  constructor(call: SetExitFeeCall) {
    this._call = call;
  }

  get numerator(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get denominator(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetExitFeeCall__Outputs {
  _call: SetExitFeeCall;

  constructor(call: SetExitFeeCall) {
    this._call = call;
  }
}

export class SetGovernanceAddressCall extends ethereum.Call {
  get inputs(): SetGovernanceAddressCall__Inputs {
    return new SetGovernanceAddressCall__Inputs(this);
  }

  get outputs(): SetGovernanceAddressCall__Outputs {
    return new SetGovernanceAddressCall__Outputs(this);
  }
}

export class SetGovernanceAddressCall__Inputs {
  _call: SetGovernanceAddressCall;

  constructor(call: SetGovernanceAddressCall) {
    this._call = call;
  }

  get _governanceAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGovernanceAddressCall__Outputs {
  _call: SetGovernanceAddressCall;

  constructor(call: SetGovernanceAddressCall) {
    this._call = call;
  }
}

export class SetLogicCall extends ethereum.Call {
  get inputs(): SetLogicCall__Inputs {
    return new SetLogicCall__Inputs(this);
  }

  get outputs(): SetLogicCall__Outputs {
    return new SetLogicCall__Outputs(this);
  }
}

export class SetLogicCall__Inputs {
  _call: SetLogicCall;

  constructor(call: SetLogicCall) {
    this._call = call;
  }

  get _poolLogic(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _poolManagerLogic(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetLogicCall__Outputs {
  _call: SetLogicCall;

  constructor(call: SetLogicCall) {
    this._call = call;
  }
}

export class SetMaximumFeeCall extends ethereum.Call {
  get inputs(): SetMaximumFeeCall__Inputs {
    return new SetMaximumFeeCall__Inputs(this);
  }

  get outputs(): SetMaximumFeeCall__Outputs {
    return new SetMaximumFeeCall__Outputs(this);
  }
}

export class SetMaximumFeeCall__Inputs {
  _call: SetMaximumFeeCall;

  constructor(call: SetMaximumFeeCall) {
    this._call = call;
  }

  get performanceFeeNumerator(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get managerFeeNumerator(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMaximumFeeCall__Outputs {
  _call: SetMaximumFeeCall;

  constructor(call: SetMaximumFeeCall) {
    this._call = call;
  }
}

export class SetMaximumPerformanceFeeNumeratorChangeCall extends ethereum.Call {
  get inputs(): SetMaximumPerformanceFeeNumeratorChangeCall__Inputs {
    return new SetMaximumPerformanceFeeNumeratorChangeCall__Inputs(this);
  }

  get outputs(): SetMaximumPerformanceFeeNumeratorChangeCall__Outputs {
    return new SetMaximumPerformanceFeeNumeratorChangeCall__Outputs(this);
  }
}

export class SetMaximumPerformanceFeeNumeratorChangeCall__Inputs {
  _call: SetMaximumPerformanceFeeNumeratorChangeCall;

  constructor(call: SetMaximumPerformanceFeeNumeratorChangeCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaximumPerformanceFeeNumeratorChangeCall__Outputs {
  _call: SetMaximumPerformanceFeeNumeratorChangeCall;

  constructor(call: SetMaximumPerformanceFeeNumeratorChangeCall) {
    this._call = call;
  }
}

export class SetMaximumSupportedAssetCountCall extends ethereum.Call {
  get inputs(): SetMaximumSupportedAssetCountCall__Inputs {
    return new SetMaximumSupportedAssetCountCall__Inputs(this);
  }

  get outputs(): SetMaximumSupportedAssetCountCall__Outputs {
    return new SetMaximumSupportedAssetCountCall__Outputs(this);
  }
}

export class SetMaximumSupportedAssetCountCall__Inputs {
  _call: SetMaximumSupportedAssetCountCall;

  constructor(call: SetMaximumSupportedAssetCountCall) {
    this._call = call;
  }

  get count(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaximumSupportedAssetCountCall__Outputs {
  _call: SetMaximumSupportedAssetCountCall;

  constructor(call: SetMaximumSupportedAssetCountCall) {
    this._call = call;
  }
}

export class SetPerformanceFeeNumeratorChangeDelayCall extends ethereum.Call {
  get inputs(): SetPerformanceFeeNumeratorChangeDelayCall__Inputs {
    return new SetPerformanceFeeNumeratorChangeDelayCall__Inputs(this);
  }

  get outputs(): SetPerformanceFeeNumeratorChangeDelayCall__Outputs {
    return new SetPerformanceFeeNumeratorChangeDelayCall__Outputs(this);
  }
}

export class SetPerformanceFeeNumeratorChangeDelayCall__Inputs {
  _call: SetPerformanceFeeNumeratorChangeDelayCall;

  constructor(call: SetPerformanceFeeNumeratorChangeDelayCall) {
    this._call = call;
  }

  get delay(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPerformanceFeeNumeratorChangeDelayCall__Outputs {
  _call: SetPerformanceFeeNumeratorChangeDelayCall;

  constructor(call: SetPerformanceFeeNumeratorChangeDelayCall) {
    this._call = call;
  }
}

export class SetPoolPerformanceAddressCall extends ethereum.Call {
  get inputs(): SetPoolPerformanceAddressCall__Inputs {
    return new SetPoolPerformanceAddressCall__Inputs(this);
  }

  get outputs(): SetPoolPerformanceAddressCall__Outputs {
    return new SetPoolPerformanceAddressCall__Outputs(this);
  }
}

export class SetPoolPerformanceAddressCall__Inputs {
  _call: SetPoolPerformanceAddressCall;

  constructor(call: SetPoolPerformanceAddressCall) {
    this._call = call;
  }

  get _poolPerformanceAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPoolPerformanceAddressCall__Outputs {
  _call: SetPoolPerformanceAddressCall;

  constructor(call: SetPoolPerformanceAddressCall) {
    this._call = call;
  }
}

export class SetPoolStorageVersionCall extends ethereum.Call {
  get inputs(): SetPoolStorageVersionCall__Inputs {
    return new SetPoolStorageVersionCall__Inputs(this);
  }

  get outputs(): SetPoolStorageVersionCall__Outputs {
    return new SetPoolStorageVersionCall__Outputs(this);
  }
}

export class SetPoolStorageVersionCall__Inputs {
  _call: SetPoolStorageVersionCall;

  constructor(call: SetPoolStorageVersionCall) {
    this._call = call;
  }

  get _poolStorageVersion(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPoolStorageVersionCall__Outputs {
  _call: SetPoolStorageVersionCall;

  constructor(call: SetPoolStorageVersionCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpgradePoolBatchCall extends ethereum.Call {
  get inputs(): UpgradePoolBatchCall__Inputs {
    return new UpgradePoolBatchCall__Inputs(this);
  }

  get outputs(): UpgradePoolBatchCall__Outputs {
    return new UpgradePoolBatchCall__Outputs(this);
  }
}

export class UpgradePoolBatchCall__Inputs {
  _call: UpgradePoolBatchCall;

  constructor(call: UpgradePoolBatchCall) {
    this._call = call;
  }

  get startIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get endIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get targetVersion(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }
}

export class UpgradePoolBatchCall__Outputs {
  _call: UpgradePoolBatchCall;

  constructor(call: UpgradePoolBatchCall) {
    this._call = call;
  }
}

export class UpgradePoolBatch1Call extends ethereum.Call {
  get inputs(): UpgradePoolBatch1Call__Inputs {
    return new UpgradePoolBatch1Call__Inputs(this);
  }

  get outputs(): UpgradePoolBatch1Call__Outputs {
    return new UpgradePoolBatch1Call__Outputs(this);
  }
}

export class UpgradePoolBatch1Call__Inputs {
  _call: UpgradePoolBatch1Call;

  constructor(call: UpgradePoolBatch1Call) {
    this._call = call;
  }

  get startIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get endIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get targetVersion(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class UpgradePoolBatch1Call__Outputs {
  _call: UpgradePoolBatch1Call;

  constructor(call: UpgradePoolBatch1Call) {
    this._call = call;
  }
}
